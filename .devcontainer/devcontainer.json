{
	"name": "AKS-Demo-Labs",
	"dockerFile": "Dockerfile",

	// do not change these if you want Docker in Docker support
	"runArgs": ["--init", "--privileged"],
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	"overrideCommand": false,

	// some base images require a specific user name
	"remoteUser": "vscode",

	"customizations": {
		"vscode": {
			// Set container specific settings
			"settings": {
				"terminal.integrated.defaultProfile.linux": "zsh",
				"files.trimTrailingWhitespace": true,
				"files.trimFinalNewlines": true,
				"files.insertFinalNewline": true
			},

			// Install extensions
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-azuretools.vscode-docker",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"davidanson.vscode-markdownlint",
				"gruntfuggly.todo-tree",
				"mutantdino.resourcemonitor",
				"humao.rest-client",
				"timonwong.shellcheck",
				"golang.go",
				"ms-mssql.mssql"
			]
		}
	},

	"hostRequirements": {
		"cpus": 4
	},

	// forward ports for the app
	"forwardPorts": [],

	// add labels
	"portsAttributes": {},

	"waitFor": "postCreateCommand",

	// Use 'onCreateCommand' to run commands as part of container creation.
	"onCreateCommand": "/bin/zsh -c .devcontainer/on-create.sh",

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "/bin/zsh -c .devcontainer/post-create.sh",

	// Use 'postStartCommand' to run commands after the container starts.
	"postStartCommand": "/bin/zsh -c .devcontainer/post-start.sh"
}
